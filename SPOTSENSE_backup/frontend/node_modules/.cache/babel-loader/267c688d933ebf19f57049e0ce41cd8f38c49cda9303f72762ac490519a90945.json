{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import axios from'axios';// Create the authentication context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// API base URL\nconst API_BASE_URL='/api';export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);useEffect(()=>{// Check if user is logged in on mount\nconst storedUser=localStorage.getItem('user');if(storedUser){setUser(JSON.parse(storedUser));}setLoading(false);},[]);// Login function\nconst login=async(email,password)=>{try{// For simplicity, we're accepting any email/password\nconst response=await axios.post(`${API_BASE_URL}/auth/login`,{email,password});if(response.data.success){const userData={email:email,username:email.split('@')[0],token:response.data.token};// Save user to state and localStorage\nsetUser(userData);localStorage.setItem('user',JSON.stringify(userData));return{success:true};}return{success:false,message:'Authentication failed'};}catch(error){// If API call fails, simulate a successful login for demo purposes\nconst userData={email:email,username:email.split('@')[0],token:`demo_${email}_${Date.now()}`};setUser(userData);localStorage.setItem('user',JSON.stringify(userData));return{success:true};}};// Register function\nconst register=async(email,password)=>{try{// For simplicity, we're accepting any registration\n// In a real app, we would call an API endpoint to create a new user\n// Simulate a successful registration\nconst userData={email:email,username:email.split('@')[0],token:`demo_${email}_${Date.now()}`};setUser(userData);localStorage.setItem('user',JSON.stringify(userData));return{success:true};}catch(error){return{success:false,message:error.message};}};// Logout function\nconst logout=()=>{setUser(null);localStorage.removeItem('user');};// Check if user is authenticated\nconst isAuthenticated=()=>{return!!user;};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,register,isAuthenticated,loading},children:children});};// Custom hook to use the auth context\nexport const useAuth=()=>useContext(AuthContext);export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","jsx","_jsx","AuthContext","API_BASE_URL","AuthProvider","_ref","children","user","setUser","loading","setLoading","storedUser","localStorage","getItem","JSON","parse","login","email","password","response","post","data","success","userData","username","split","token","setItem","stringify","message","error","Date","now","register","logout","removeItem","isAuthenticated","Provider","value","useAuth"],"sources":["C:/Users/Lenovo/Documents/APICODE/spotsense/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n// Create the authentication context\r\nconst AuthContext = createContext();\r\n\r\n// API base URL\r\nconst API_BASE_URL = '/api';\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in on mount\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      // For simplicity, we're accepting any email/password\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, { email, password });\r\n      \r\n      if (response.data.success) {\r\n        const userData = {\r\n          email: email,\r\n          username: email.split('@')[0],\r\n          token: response.data.token\r\n        };\r\n        \r\n        // Save user to state and localStorage\r\n        setUser(userData);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        return { success: true };\r\n      }\r\n      \r\n      return { success: false, message: 'Authentication failed' };\r\n    } catch (error) {\r\n      // If API call fails, simulate a successful login for demo purposes\r\n      const userData = {\r\n        email: email,\r\n        username: email.split('@')[0],\r\n        token: `demo_${email}_${Date.now()}`\r\n      };\r\n      \r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return { success: true };\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (email, password) => {\r\n    try {\r\n      // For simplicity, we're accepting any registration\r\n      // In a real app, we would call an API endpoint to create a new user\r\n      \r\n      // Simulate a successful registration\r\n      const userData = {\r\n        email: email,\r\n        username: email.split('@')[0],\r\n        token: `demo_${email}_${Date.now()}`\r\n      };\r\n      \r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n      return { success: true };\r\n    } catch (error) {\r\n      return { success: false, message: error.message };\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!user;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider \r\n      value={{ \r\n        user, \r\n        login, \r\n        logout, \r\n        register, \r\n        isAuthenticated, \r\n        loading \r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => useContext(AuthContext);\r\n\r\nexport default AuthContext; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}